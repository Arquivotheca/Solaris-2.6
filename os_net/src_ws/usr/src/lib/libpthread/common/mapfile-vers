#
#ident	"@(#)mapfile-vers	1.5	96/02/09 SMI"
#
# Copyright (c) 1996 by Sun Microsystems, Inc.
# All rights reserved.
#
#
# Generic interface definition for usr/src/lib/libpthread.
#
# For information regarding the establishment of versioned definitions see:
#	The Linker and Libraries Manual (version 2.5 or greater)
# This is part of the Developers Guide in the Answerbook.  Specifically refer
# to Chapter 2 under section "Defining Additional Symbols" through section
# "Reducing Symbol Scope", and Chapter 5 "Versioning".
#
# For specific OSNET rules for the modification (evolution) of these version
# definitions see:
#	Policy for Shared Library Version Names and Interface Definitions


SUNW_1.1 {
	global:
		__pthread_cleanup_pop;
		__pthread_cleanup_push;
		_getfp;
		_mutex_lock;
		alarm;
		close;
		cond_broadcast;
		cond_destroy;
		cond_init;
		cond_signal;
		cond_timedwait;
		cond_wait;
		creat;
		fcntl;
		fork1;
		fork;
		fsync;
		msync;
		mutex_destroy;
		mutex_init;
		mutex_lock;
		mutex_trylock;
		mutex_unlock;
		open;
		pause;
		pthread_atfork;
		pthread_attr_destroy;
		pthread_attr_getdetachstate;
		pthread_attr_getinheritsched;
		pthread_attr_getschedparam;
		pthread_attr_getschedpolicy;
		pthread_attr_getscope;
		pthread_attr_getstackaddr;
		pthread_attr_getstacksize;
		pthread_attr_init;
		pthread_attr_setdetachstate;
		pthread_attr_setinheritsched;
		pthread_attr_setschedparam;
		pthread_attr_setschedpolicy;
		pthread_attr_setscope;
		pthread_attr_setstackaddr;
		pthread_attr_setstacksize;
		pthread_cancel;
		pthread_cond_broadcast;
		pthread_cond_destroy;
		pthread_cond_init;
		pthread_cond_signal;
		pthread_cond_timedwait;
		pthread_cond_wait;
		pthread_condattr_destroy;
		pthread_condattr_getpshared;
		pthread_condattr_init;
		pthread_condattr_setpshared;
		pthread_create;
		pthread_detach;
		pthread_equal;
		pthread_exit;
		pthread_getschedparam;
		pthread_getspecific;
		pthread_join;
		pthread_key_create;
		pthread_key_delete;
		pthread_kill;
		pthread_mutex_destroy;
		pthread_mutex_getprioceiling;
		pthread_mutex_init;
		pthread_mutex_lock;
		pthread_mutex_setprioceiling;
		pthread_mutex_trylock;
		pthread_mutex_unlock;
		pthread_mutexattr_destroy;
		pthread_mutexattr_getprioceiling;
		pthread_mutexattr_getprotocol;
		pthread_mutexattr_getpshared;
		pthread_mutexattr_init;
		pthread_mutexattr_setprioceiling;
		pthread_mutexattr_setprotocol;
		pthread_mutexattr_setpshared;
		pthread_once;
		pthread_self;
		pthread_setcancelstate;
		pthread_setcanceltype;
		pthread_setschedparam;
		pthread_setspecific;
		pthread_sigmask;
		pthread_testcancel;
		read;
		rw_rdlock;
		rw_tryrdlock;
		rw_trywrlock;
		rw_unlock;
		rw_wrlock;
		rwlock_init;
		sema_destroy;
		sema_init;
		sema_post;
		sema_trywait;
		sema_wait;
		setitimer;
		sigaction;
		sigprocmask;
		siglongjmp;
		sigsetjmp;
		sigsuspend;
		sigwait;
		sleep;
		tcdrain;
		thr_continue;
		thr_create;
		thr_exit;
		thr_getconcurrency;
		thr_getprio;
		thr_getspecific;
		thr_join;
		thr_keycreate;
		thr_kill;
		thr_main;
		thr_min_stack;
		thr_self;
		thr_setconcurrency;
		thr_setprio;
		thr_setspecific;
		thr_sigsetmask;
		thr_stksegment;
		thr_suspend;
		thr_yield;
		wait;
		waitpid;
		write;
	local:
		*;
};

SUNWprivate_1.1 {
	global:
		__fork_init;		# needed so we call entry in libthread
		_alarm;
		_cond_broadcast;
		_cond_destroy;
		_cond_init;
		_cond_signal;
		_cond_timedwait;
		_cond_wait;
		_fork1;
		_fork;
		_mutex_destroy;
		_mutex_init;
		_mutex_trylock;
		_mutex_unlock;
		_pthread_atfork;
		_pthread_attr_destroy;
		_pthread_attr_getdetachstate;
		_pthread_attr_getinheritsched;
		_pthread_attr_getschedparam;
		_pthread_attr_getschedpolicy;
		_pthread_attr_getscope;
		_pthread_attr_getstackaddr;
		_pthread_attr_getstacksize;
		_pthread_attr_init;
		_pthread_attr_setdetachstate;
		_pthread_attr_setinheritsched;
		_pthread_attr_setschedparam;
		_pthread_attr_setschedpolicy;
		_pthread_attr_setscope;
		_pthread_attr_setstackaddr;
		_pthread_attr_setstacksize;
		_pthread_cancel;
		_pthread_cond_broadcast;
		_pthread_cond_destroy;
		_pthread_cond_init;
		_pthread_cond_signal;
		_pthread_cond_timedwait;
		_pthread_cond_wait;
		_pthread_condattr_destroy;
		_pthread_condattr_getpshared;
		_pthread_condattr_init;
		_pthread_condattr_setpshared;
		_pthread_create;
		_pthread_detach;
		_pthread_equal;
		_pthread_exit;
		_pthread_getschedparam;
		_pthread_getspecific;
		_pthread_join;
		_pthread_key_create;
		_pthread_key_delete;
		_pthread_kill;
		_pthread_mutex_destroy;
		_pthread_mutex_getprioceiling;
		_pthread_mutex_init;
		_pthread_mutex_lock;
		_pthread_mutex_setprioceiling;
		_pthread_mutex_trylock;
		_pthread_mutex_unlock;
		_pthread_mutexattr_destroy;
		_pthread_mutexattr_getprioceiling;
		_pthread_mutexattr_getprotocol;
		_pthread_mutexattr_getpshared;
		_pthread_mutexattr_init;
		_pthread_mutexattr_setprioceiling;
		_pthread_mutexattr_setprotocol;
		_pthread_mutexattr_setpshared;
		_pthread_once;
		_pthread_self;
		_pthread_setcancelstate;
		_pthread_setcanceltype;
		_pthread_setschedparam;
		_pthread_setspecific;
		_pthread_sigmask;
		_pthread_testcancel;
		_resume;
		_resume_ret;
		_rw_rdlock;
		_rw_tryrdlock;
		_rw_trywrlock;
		_rw_unlock;
		_rw_wrlock;
		_rwlock_init;
		_sema_destroy;
		_sema_init;
		_sema_post;
		_sema_trywait;
		_sema_wait;
		_setitimer;
		_sigaction;
		_siglongjmp;
		_sigsetjmp;
		_sigsuspend;
		_sigprocmask;
		__sigtimedwait;
		_sigwait;
		_sleep;
		_thr_continue;
		_thr_create;
		_thr_exit;
		_thr_getconcurrency;
		_thr_getprio;
		_thr_getspecific;
		_thr_join;
		_thr_keycreate;
		_thr_kill;
		_thr_main;
		_thr_min_stack;
		 thr_probe_getfunc_addr;
		 thr_probe_setup;
		_thr_self;
		_thr_setconcurrency;
		_thr_setprio;
		_thr_setspecific;
		_thr_sigsetmask;
		_thr_stksegment;
		_thr_suspend;
		_thr_yield;
};
