/*
 *  Copyright (c) 1993 Sun Microsystems, Inc.  All Rights Reserved.
 */

/*
 * simparse_test.cc
 * This file is the main program for testing the parser and
 * lexical analyzer generated by sim_parse.y and sim_parse.l
 */

#pragma ident   "@(#)simparse_test.cc 1.2     94/03/24 SMI"

#include <iostream.h>
#include <string.h>
#include <stdlib.h>
#include "simstate.h"

extern Simstate *simparse(char *fname);
extern void simparse_debug();
extern void simparse_verbose();

int verbose = 0;
int printstate = 0;

main(int argc, char * const *argv)
{
	extern char *optarg;
	extern int optind, opterr, optopt;
	int c;
	char *key = "foo";
	Simstate *ssp;

	while ((c = getopt(argc, argv, "vp")) != EOF) {
		switch(c) {
		case 'v':
			verbose++;
			simparse_verbose();
			break;
		case 'p':
			printstate++;
			break;
		default:
			break; // Ignore unknown args
		}
	}
	if(verbose > 2)
		simparse_debug();
	for (; optind < argc; optind++) {
		if (verbose)
			cout << "Processing " << argv[optind] << endl;
		ssp = simparse(argv[optind]);
		if(printstate && ssp != (Simstate *)0)
			ssp->print(cout);
	}
}
